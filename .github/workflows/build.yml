name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.common.outputs.short_sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set common outputs
        id: common
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Build
        run: ./gradlew build --no-daemon

      - name: Rename
        id: rename
        run: |
          src_path="$(ls build/libs/*.jar)"
          src_basename="${src_path:11:$(( ${#src_path} - 15 ))}"
          dest_basename="$src_basename-$(git rev-parse --short HEAD)"
          dest_path="build/libs/$dest_basename.jar"
          mv "$src_path" "$dest_path"

          echo "dest_basename=$dest_basename" >> "$GITHUB_OUTPUT"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.rename.outputs.dest_basename }}
          path: build/libs/${{ steps.rename.outputs.dest_basename }}.jar

  prerelease:
    name: Prerelease
    permissions: write-all
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: libs/

      - name: Delete prerelease assets
        uses: 8Mi-Tech/delete-release-assets-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: prerelease-${{ github.ref_name }}
          deleteOnlyFromDrafts: false

      - name: Prerelease
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          name: 'Prerelease: ${{ github.ref_name }}'
          tag_name: prerelease-${{ github.ref_name }}
          body: "Build for commit ${{ needs.prepare.outputs.short_sha }}"
          files: libs/*
